{"version":3,"sources":["webpack:///./components/card/index.js","webpack:///./routes/publication/index.js","webpack:///./routes/publication/style.scss","webpack:///./components/card/style.scss"],"names":["Card","props","useState","card","updateCard","useEffect","url","fetch","encodeURIComponent","then","resp","json","data","class","style","href","atob","title","link","icon","comments","Publications","compendium","updateCompendium","publishers","publications","Object","keys","map","publisher","module","exports"],"mappings":"iKA6BeA,EAxBF,SAACC,GAAU,MAEKC,YAAS,IAA7BC,EAFe,KAETC,EAFS,KAevB,OAXCC,aAAU,WACLJ,EAAMK,KACPC,MAAM,kFAAkFC,mBAAmBP,EAAMK,KAAK,SACrHG,MAAK,SAAAC,GACJA,EAAKC,OAAOF,MAAK,SAAAG,GACfR,GAAW,WAAQ,OAAIQ,aAI5B,CAACX,EAAMK,MAGR,mBAAKO,MAAOC,IAAMX,MAChB,iBAAGY,KAAMC,KAAKf,EAAMK,MAAO,kBAAIO,MAAOC,IAAMG,OAAQd,EAAKc,OAASD,KAAKb,EAAKc,SAC5E,iBAAGJ,MAAOC,IAAMI,KAAMH,KAAMC,KAAKf,EAAMK,MAAO,YAAC,IAAD,CAAiBa,KAAK,sBAApE,KAAsGH,KAAKf,EAAMK,MACjH,mBAAKO,MAAOC,IAAMM,UAAWjB,EAAKiB,UAAYJ,KAAKb,EAAKiB,a,qBCU/CC,UA7BM,WAAM,MAEanB,YAAS,IAAzCoB,EAFmB,KAEPC,EAFO,KAa1B,OATAlB,aAAU,WACTE,MAAM,0FACLE,MAAK,SAAAC,GACLA,EAAKC,OAAOF,MAAK,SAAAG,GAChBW,EAAiBX,EAAKY,oBAGtB,IAGH,mBAAKX,MAAOC,IAAMW,cACfH,GAAcI,OAAOC,KAAKL,GAAYM,KAAI,SAACC,GAAD,OAC3C,YAAC,WAAD,KACC,sBAAKA,GACHP,EAAWO,GAAWD,KAAI,SAACtB,GAAD,OAC1B,YAAC,EAAD,CAAMA,IAAKA,c,iBCvBjBwB,EAAOC,QAAU,CAAC,aAAe,S,iBCAjCD,EAAOC,QAAU,CAAC,KAAO,QAAQ,KAAO","file":"route-publication.chunk.79bf1.js","sourcesContent":["import { h } from 'preact'\nimport style from './style'\nimport { useEffect, useState } from 'preact/hooks'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Card = (props) => {\n\n  const [card, updateCard] = useState({})\n\n  useEffect(() => {\n    if(props.url) {\n      fetch('https://raw.githubusercontent.com/friendsofwallstreet/dotcom/main/data/content/'+encodeURIComponent(props.url)+'.json')\n      .then(resp => {\n        resp.json().then(data => {\n          updateCard(prevCard => data)\n        })\n      })\n    }\n  }, [props.url])\n\n\treturn (\n    <div class={style.card}>\n      <a href={atob(props.url)} ><h3 class={style.title}>{card.title && atob(card.title)}</h3></a>\n      <a class={style.link} href={atob(props.url)} ><FontAwesomeIcon icon='external-link-alt'/>&nbsp;&nbsp;{atob(props.url)}</a>\n      <pre class={style.comments}>{card.comments && atob(card.comments)}</pre>\n    </div>\n\t)\n}\n\nexport default Card;","import { Fragment, h } from 'preact'\nimport { useEffect, useState } from 'preact/hooks'\nimport Card from '../../components/card'\nimport style from './style'\n\nconst Publications = () => {\n\n\tconst [compendium, updateCompendium] = useState([])\n\n\tuseEffect(() => {\n\t\tfetch('https://raw.githubusercontent.com/friendsofwallstreet/dotcom/main/data/compendium.json')\n\t\t.then(resp => {\n\t\t\tresp.json().then(data => {\n\t\t\t\tupdateCompendium(data.publishers)\n\t\t\t})\n\t\t})\n\t}, [])\n\t\n\treturn (\n\t<div class={style.publications}>\n\t\t{ compendium && Object.keys(compendium).map((publisher, index) => (\n\t\t\t<Fragment>\n\t\t\t\t<h2>{publisher}</h2>\n\t\t\t\t{ compendium[publisher].map((url, index) => (\n\t\t\t\t\t\t<Card url={url} />\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t))\n\t\t}\n\t</div>\n\t)\n}\n\nexport default Publications;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"publications\":\"f452\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_117e\",\"link\":\"_73a8\"};"],"sourceRoot":""}